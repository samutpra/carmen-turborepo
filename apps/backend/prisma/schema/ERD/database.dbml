// Use DBML to define your database structure
// Docs: https://dbml.dbdiagram.io/docs

Project Carmen_Inventory {
  database_type: 'PostgreSQL'
  Note: 'Carmen Inventory Project 2024'
}

TABLE CARMEN_SYSTEM.User {
  id uuid [not null, pk, default: `gen_random_uuid()`]
  username varchar(30) [unique, not null]
  email varchar(255) [not null]
  
  consent timestamp

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid [ref: > CARMEN_SYSTEM.User.id]

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid [ref: > CARMEN_SYSTEM.User.id]

  indexes {
    username [name: "user_username_idx"]
    email [name: "user_email_idx"]
  }
}

TABLE CARMEN_SYSTEM.Password {
  id uuid [not null, pk, default: `gen_random_uuid()`]
  userId uuid [not null, ref: > CARMEN_SYSTEM.User.id]
  hash text [not null]

  isActive bool [default: false]

  //expiredOn date [not null, default: `now() + '1 day'::interval`]

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]

  indexes {
    userId [name: 'password_userid_idx']
  }
}

TABLE CARMEN_SYSTEM.UserProfile {
  id uuid [not null, pk, default: `gen_random_uuid()`]
  userId uuid [ref: - CARMEN_SYSTEM.User.id]
  firstname varchar(100)
  middlename varchar(100)
  lastname varchar(100)

  bio json

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid [ref: > CARMEN_SYSTEM.User.id]

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid [ref: > CARMEN_SYSTEM.User.id]

  indexes {
    userId [name: "userprofile_userid_idx"]
   (firstname, lastname) [name: "userprofile_firstname_lastname_idx"]
  }
}

Enum CARMEN_SYSTEM.EnumSubscriptionStatus {
  Active
  Inactive
  expired
}

TABLE CARMEN_SYSTEM.Module {
  id uuid [not null, pk, default: `gen_random_uuid()`]
  name        varchar   [not null, unique]
  description text

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid [ref: > CARMEN_SYSTEM.User.id]

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid [ref: > CARMEN_SYSTEM.User.id]

  indexes {
    name [name: "module_name_idx"]
  }
}

TABLE CARMEN_SYSTEM.BusinessUnitModule {
  id uuid [not null, pk, default: `gen_random_uuid()`]
  businessUnitId uuid [not null, ref: > CARMEN_SYSTEM.BusinessUnit.id]
  moduleId uuid [not null, ref: > CARMEN_SYSTEM.Module.id]

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid [ref: > CARMEN_SYSTEM.User.id]

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid [ref: > CARMEN_SYSTEM.User.id]

  indexes {
    (businessUnitId, moduleId) [name: "businessunitmodule_businessunitid_moduleid_u"]
  }
}

TABLE CARMEN_SYSTEM.Subscription {
   id uuid [not null, pk, default: `gen_random_uuid()`]
   clusterId uuid [not null, ref: > CARMEN_SYSTEM.Cluster.id]

   startDate date [not null]
   endDate date [not null]

   status CARMEN_SYSTEM.EnumSubscriptionStatus [not null]

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid [ref: > CARMEN_SYSTEM.User.id]

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid [ref: > CARMEN_SYSTEM.User.id]

  indexes {

  }
}

TABLE CARMEN_SYSTEM.SubscriptionDetail {
   id uuid [not null, pk, default: `gen_random_uuid()`]

    subscriptionId uuid [not null, ref: > CARMEN_SYSTEM.Subscription.id]
    bussinessUnitId uuid [not null, ref: > CARMEN_SYSTEM.BusinessUnit.id]
    moduleId uuid [not null, ref: > CARMEN_SYSTEM.Module.id]

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid [ref: > CARMEN_SYSTEM.User.id]

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid [ref: > CARMEN_SYSTEM.User.id]

  indexes {
    (subscriptionId, bussinessUnitId, moduleId) [unique, name: "subscriptiondetail_subscriptionid_businessunitid_moduleid_u"]
  }
}

TABLE CARMEN_SYSTEM.Cluster {
  id uuid [not null, pk, default: `gen_random_uuid()`]
  code varchar(30) [not null, unique]
  name text [not null, unique]

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid [ref: > CARMEN_SYSTEM.User.id]

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid [ref: > CARMEN_SYSTEM.User.id]

  indexes {
    code [unique, name: "cluster_code_u"]
    name [unique, name: "cluster_name_u"]
  }
}

TABLE CARMEN_SYSTEM.BusinessUnit {
  id uuid [not null, pk, default: `gen_random_uuid()`]
  clusterId uuid [not null, ref: > CARMEN_SYSTEM.Cluster.id]
  code varchar(30) [not null]
  name text [not null]

  isHq bool [default: true]

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid [ref: > CARMEN_SYSTEM.User.id]

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid [ref: > CARMEN_SYSTEM.User.id]

  indexes {
    clusterId [name: "tenant_clusertid_idx"]
    code [name: "businessunit_code_idx"]
    (clusterId, code) [unique, name: "businessunit_clusertid_code_u"]
  }
}

TABLE CARMEN_SYSTEM.UserBusinessUnit {
  id uuid [not null, pk, default: `gen_random_uuid()`]
  userId uuid [ref: > CARMEN_SYSTEM.User.id]
  businessunitId uuid [ref: > CARMEN_SYSTEM.BusinessUnit.id]

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid [ref: > CARMEN_SYSTEM.User.id]

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid [ref: > CARMEN_SYSTEM.User.id]

  indexes {
    (userId, businessunitId) [unique, name: "usertenant_userid_bussinessunitid_u"]
  }
}

TABLE CARMEN_SYSTEM.NotificationPreference {
  id uuid [not null, pk, default: `gen_random_uuid()`]
  userId uuid [not null, unique, ref: > CARMEN_SYSTEM.User.id]

  isEmail bool [not null, default: false]
  isSMS bool [default: false]
  isInApp bool [default: true]

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid [ref: > CARMEN_SYSTEM.User.id]

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid [ref: > CARMEN_SYSTEM.User.id]

  indexes {
    userId [name: "notificationpreference_userid_u"]
  }
}

TABLE CARMEN_SYSTEM.Notification {
  id uuid [not null, pk, default: `gen_random_uuid()`]
  userId uuid [not null, ref: > CARMEN_SYSTEM.User.id]
  message text
  isRead bool [default: false]

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid [ref: > CARMEN_SYSTEM.User.id]

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid [ref: > CARMEN_SYSTEM.User.id]

  indexes {
  }
}

TABLE CARMEN_SYSTEM.Role {
  id uuid [not null, pk, default: `gen_random_uuid()`]
  bussinessUnitId uuid [not null, ref: > CARMEN_SYSTEM.BusinessUnit.id]
  name        varchar   [not null, unique]
  description text

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid [ref: > CARMEN_SYSTEM.User.id]

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid [ref: > CARMEN_SYSTEM.User.id]

  indexes {
    name [name: "role_name_idx"]
    (bussinessUnitId, name) [unique, name: "role_bussinessunitid_name_u"]
  }
}

TABLE CARMEN_SYSTEM.Permission {
  id uuid [not null, pk, default: `gen_random_uuid()`]
  name        varchar   [unique, not null]
  description text

  canGet bool [not null, default: true]
  canCreate bool [not null, default: true]
  canUpdate bool [not null, default: true]
  canDelete bool [not null, default: true]
  canPrint bool [not null, default: true]

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid [ref: > CARMEN_SYSTEM.User.id]

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid [ref: > CARMEN_SYSTEM.User.id]

  indexes {
    name [name: "permission_name_u"]
  }
}

TABLE CARMEN_SYSTEM.UserRole {
  id uuid [not null, pk, default: `gen_random_uuid()`]
  userId   uuid [not null, ref: > CARMEN_SYSTEM.User.id]
  roleId   uuid [not null, ref: > CARMEN_SYSTEM.Role.id]

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid [ref: > CARMEN_SYSTEM.User.id]

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid [ref: > CARMEN_SYSTEM.User.id]

  Indexes {
    (userId, roleId) [unique, name: "userrole_userid_roleid_u"]
  }
}

TABLE CARMEN_SYSTEM.RolePermission {
  id uuid [not null, pk, default: `gen_random_uuid()`]
  roleId       uuid [not null, ref: > CARMEN_SYSTEM.Role.id]
  permissionId uuid [not null, ref: > CARMEN_SYSTEM.Permission.id]

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid [ref: > CARMEN_SYSTEM.User.id]

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid [ref: > CARMEN_SYSTEM.User.id]

  Indexes {
    (roleId, permissionId) [unique, name: "rolepermission_roleid_permissionid_u"]
  }
}

TABLE TENANT_DUMMY.Menu {
  id uuid [not null, pk, default: `gen_random_uuid()`]
  name varchar(5) [unique, not null]
  description text
  isActive bool [default: true]
  isVisible bool [default: true]

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid 

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid

  indexes {
    name [name: "menu_name_u"]
  }
}

TABLE TENANT_DUMMY.Currency {
  id uuid [not null, pk, default: `gen_random_uuid()`]
  code varchar(3) [unique, not null]
  name varchar(100) [not null]
  symbol varchar(5)
  description text [default: ""]
  isActive bool [default: true]
  rate float [default: 1]

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid 

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid

  indexes {
    code [name: "currency_code_u"]

  }
}

TABLE TENANT_DUMMY.ExchangeRate {
  id uuid [not null, pk, default: `gen_random_uuid()`]

  dateAt timestamp [default: `now()`]
  currencyId uuid [ref: > TENANT_DUMMY.Currency.id]
  rate float [default: 1]

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid 

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid

  indexes {
    (dateAt, currencyId) [unique, name: "exchangerate_dateat_currencyid_u"]
  }
}

enum TENANT_DUMMY.EnumLocationType {
  Inventory
  Direct
}

TABLE TENANT_DUMMY.Location {
  id uuid [not null, pk, default: `gen_random_uuid()`]
  name varchar [unique, not null]

  locationType TENANT_DUMMY.EnumLocationType [not null]

  description text
  isActive bool [default: true]

  deliveryPointId uuid [ref: > TENANT_DUMMY.DeliveryPoint.id]

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid 

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid

  indexes {
    name [name: "location_name_u"]
  }
}

TABLE TENANT_DUMMY.DeliveryPoint {
  id uuid [not null, pk, default: `gen_random_uuid()`]
  name varchar [unique, not null]
  isActive bool [default: true]

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid 

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid

  indexes {
    name [name: "deliverypoint_name_u"]
  }
}

TABLE TENANT_DUMMY.Unit {
  id uuid [not null, pk, default: `gen_random_uuid()`]
  name varchar [unique, not null]
  description text
  isActive bool [default: true]

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid 

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid

  indexes {
    name [name: "unit_name_u"]
  }
}

Enum TENANT_DUMMY.EnumUnitType {
  OrderUnit
  InventoryUnit
  RecipeUnit
}

TABLE TENANT_DUMMY.UnitConversion {
  id uuid [not null, pk, default: `gen_random_uuid()`]
  productId uuid [ref: > TENANT_DUMMY.Product.id]
  unitType TENANT_DUMMY.EnumUnitType [not null]
  fromUnitId uuid [ref: > TENANT_DUMMY.Unit.id]
  toUnitId uuid [ref: > TENANT_DUMMY.Unit.id]
  rate float [default: 1]
  description text
  isActive bool [default: true]

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid 

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid

  indexes {
    (productId, unitType) [name: "unitconversion_productid_unittype_u"]
  }
}

TABLE TENANT_DUMMY.Department {
  id uuid [not null, pk, default: `gen_random_uuid()`]
  name varchar [unique, not null]
  isActive bool [default: true]

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid 

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid

  indexes {
    name [name: "department_name_u"]
  }
}

TABLE TENANT_DUMMY.Product {
  id uuid [not null, pk, default: `gen_random_uuid()`]
  code varchar [unique, not null]
  name varchar [unique, not null]
  description text

  primaryUnit uuid [not null, ref: > TENANT_DUMMY.Unit.id]

  isActive bool [default: true]
  
  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid 

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid

  indexes {
    code [name: "product_code_u"]
    name [name: "product_name_u"]
  }
}

TABLE TENANT_DUMMY.ProductInfo {
  id uuid [not null, pk, default: `gen_random_uuid()`]
  productId uuid [unique, not null, ref: - TENANT_DUMMY.Product.id]
  price Float

  info json

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid 

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid

  indexes {
    productId [name: "productinfo_productid_u"]
  }
}

TABLE TENANT_DUMMY.ProductCategory {
  id uuid [not null, pk, default: `gen_random_uuid()`]
  name varchar [unique, not null]
  description text
  isActive bool [default: true]

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid 

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid

  indexes {
    name [name: "productcategory_name_u"]
  }
}

TABLE TENANT_DUMMY.ProductSubCategory {
 
  id uuid [not null, pk, default: `gen_random_uuid()`]
  name varchar [unique, not null]
  description text
  isActive bool [default: true]
  productCategoryId uuid [ref: > TENANT_DUMMY.ProductCategory.id]

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid 

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid

  indexes {
    name [name: "productsubcategory_name_u"]
  }
}

TABLE TENANT_DUMMY.ProductItemGroup {
  id uuid [not null, pk, default: `gen_random_uuid()`]
  name varchar [unique, not null]
  description text
  isActive bool [default: true]
  productSubCategoryId uuid [ref: > TENANT_DUMMY.ProductSubCategory.id]

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid 

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid

  indexes {
    name [name: "productitemgroup_name_u"]
  }
}

TABLE TENANT_DUMMY.PRType {
  id uuid [not null, pk, default: `gen_random_uuid()`]
  name varchar [unique, not null]
  description text
  isActive bool [default: true]

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid 

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid

  indexes {
    name [name: "PRtype_name_u"]
  }
}

TABLE TENANT_DUMMY.PR0 {
  id uuid [not null, pk, default: `gen_random_uuid()`]
  refName varchar [unique, not null]
  prDate date
  prTypeId uuid [ref: > TENANT_DUMMY.PRType.id]

  requestorId uuid
  departmentId uuid

  isActive bool [default: true]

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid 

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid

  indexes {
    refName [name: "PR0_refname_u"]
  }
}

TABLE TENANT_DUMMY.PR1 {
  id uuid [not null, pk, default: `gen_random_uuid()`]
  
  PR0Id uuid [ref: > TENANT_DUMMY.PR0.id]
  
  locationId uuid
  productId uuid
  unitId uuid

  description text

  requestQty float
  approveQty float

  currencyId uuid
  currencyRate float

  price numeric(15,5)
  totalPrice numeric(15,5)

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid 

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid

   indexes {
  }
}

TABLE TENANT_DUMMY.PR1Workflow {

   id uuid [not null, pk, default: `gen_random_uuid()`]
  PR1Id uuid [ref: > TENANT_DUMMY.PR1.id]



  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid 
  
}

TABLE TENANT_DUMMY.PO0 {
  id uuid [not null, pk, default: `gen_random_uuid()`]
  name varchar [unique, not null]
  description text
  isActive bool [default: true]

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid 

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid
  
  indexes {
    name [name: "PO_name_u"]
  }
}

TABLE TENANT_DUMMY.PO1 {
  id uuid [not null, pk, default: `gen_random_uuid()`]
  name varchar [unique]
  description text
  isActive bool [default: true]

  PO0Id uuid [ref: > TENANT_DUMMY.PO0.id]

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid 

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid

  indexes {
    name [name: "PO1_name_u"]
  }
}


TABLE TENANT_DUMMY.Vendor {
  id uuid [not null, pk, default: `gen_random_uuid()`]
  name varchar [unique, not null]
  description text
  isActive bool [default: true]

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid 

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid

  indexes {
    name [name: "vendor_name_u"]
  }
}


TABLE TENANT_DUMMY.ContactType {
  id uuid [not null, pk, default: `gen_random_uuid()`]
  name uuid [unique, not null]
  description text
  isActive bool [default: true]

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid 

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid

  indexes {
    name [name: "contacttype_name_u"]
  }
}

TABLE TENANT_DUMMY.VendorContact {
  id uuid [not null, pk, default: `gen_random_uuid()`]
  vendorId uuid [ref: > TENANT_DUMMY.Vendor.id]
  contactTypeId uuid [not null, ref: > TENANT_DUMMY.ContactType.id]
  description text
  isActive bool [default: true]

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid 

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid

  indexes {
    (vendorId, contactTypeId) [unique, name: "vendorcontact_vendorid_contacttypeid_u"]
  }
}


TABLE TENANT_DUMMY.AddressType {
  id uuid [not null, pk, default: `gen_random_uuid()`]
  name uuid [unique, not null]
  description text
  isActive bool [default: true]

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid 

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid

  indexes {
    name [name: "addresstype_name_u"]
  }
}

TABLE TENANT_DUMMY.VendorAddress {
  id uuid [not null, pk, default: `gen_random_uuid()`]
  vendorId uuid [ref: > TENANT_DUMMY.Vendor.id]
  addressTypeId uuid [not null, ref: > TENANT_DUMMY.AddressType.id]
  address json
  isActive bool [default: true]

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid 

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid

  indexes {
    (vendorId, addressTypeId) [unique, name: "vendorcontact_vendorid_addresstypeid_u"]
  }
}

TABLE TENANT_DUMMY.ProductVendor {
  id uuid [not null, pk, default: `gen_random_uuid()`]

  vendorId uuid [ref: > TENANT_DUMMY.Vendor.id]
  productId uuid [ref: > TENANT_DUMMY.Product.id]

  description text
  isActive bool [default: true]

  createdAt timestamp [default: `CURRENT_TIMESTAMP` ]
  createById uuid 

  updateAt timestamp [null, default: `CURRENT_TIMESTAMP`]
  updateById uuid

  indexes {
    (vendorId, productId) [unique, name: "productvendor_vendorid_productid_u"]
  }
}

enum TENANT_DUMMY.EnumPRDocStatus {
  Draft
  WIP
  Complete
}

enum TENANT_DUMMY.EnumPRWorkflowStatus {
  Draft
  Pending
  Review
  Accept
}

enum TENANT_DUMMY.EnumPOStatus {
  Open 
  Voided 
  Closed 
  Draft 
  Sent
  Partial
  FullyReceived 
  Cancelled 
  Deleted 
}

enum TENANT_DUMMY.EnumInvDocType {
  GRN
  CN
  SR
  ISSUE
  ADJ
  SI
  SO
}

TABLE TENANT_DUMMY.INV0 {

  id uuid [not null, pk, default: `gen_random_uuid()`]
  name varchar [unique, not null]
  invDocType TENANT_DUMMY.EnumInvDocType
}

TABLE TENANT_DUMMY.INV1 {

  id uuid [not null, pk, default: `gen_random_uuid()`]
  inv0Id uuid [not null, ref: > TENANT_DUMMY.INV0.id]

  fromLot uuid
  currentLotName varchar

  qty decimal
  cost numeric(15,5)

}

TABLE TENANT_DUMMY.INV2 {

  id uuid [not null, pk, default: `gen_random_uuid()`]
  inv1Id uuid [ not null, ref: > TENANT_DUMMY.INV1.id]
  
  lotName varchar
  lotIndex integer [not null, default: 1]

  qty decimal
  cost numeric(15,5)

  indexes {
    (lotName, lotIndex) [unique, name: "inv2_lotname_lotindex_u"]
  }
}

TABLE TENANT_DUMMY.GRN0 {

  id uuid [not null, pk, default: `gen_random_uuid()`]
  inv0Id uuid [not null, ref: - TENANT_DUMMY.INV0.id]
  
  name varchar

}

TABLE TENANT_DUMMY.GRN1 {

  id uuid [not null, pk, default: `gen_random_uuid()`]
  GRN0Id uuid [not null, ref: > TENANT_DUMMY.GRN0.id]
  
  name varchar

}

TABLE TENANT_DUMMY.SR0 {

  id uuid [not null, pk, default: `gen_random_uuid()`]
  inv0Id uuid [not null, ref: - TENANT_DUMMY.INV0.id]
  
  name varchar

}

TABLE TENANT_DUMMY.SR1 {

  id uuid [not null, pk, default: `gen_random_uuid()`]
  SR0Id uuid [not null, ref: > TENANT_DUMMY.SR0.id]
  
  name varchar

}


TABLE TENANT_DUMMY.SI0 {

  id uuid [not null, pk, default: `gen_random_uuid()`]
  inv0Id uuid [not null, ref: - TENANT_DUMMY.INV0.id]
  
  name varchar

}

TABLE TENANT_DUMMY.SI1 {

  id uuid [not null, pk, default: `gen_random_uuid()`]
  SI0Id uuid [not null, ref: > TENANT_DUMMY.SI0.id]
  
  name varchar

}


TABLE TENANT_DUMMY.SO0 {

  id uuid [not null, pk, default: `gen_random_uuid()`]
  inv0Id uuid [not null, ref: - TENANT_DUMMY.INV0.id]
  
  name varchar

}

TABLE TENANT_DUMMY.SO1 {

  id uuid [not null, pk, default: `gen_random_uuid()`]
  SO0Id uuid [not null, ref: > TENANT_DUMMY.SO0.id]
  
  name varchar

}
