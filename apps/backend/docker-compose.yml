# version: '3.8'

services:

  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      # - POSTGRES_DB=carmen_db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    # restart: always

  # adminer:
  #   image: adminer
  #   networks:
  #     - app-network
  #   restart: always
  #   depends_on:
  #     - postgres
  #   ports:
  #     - "8080:8080"

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - app-network

  dev-api:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    working_dir: /app
    ports:
      - "4000:4000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432?schema=public
      - DATABASE_URL_SYSTEM=postgresql://postgres:postgres@postgres:5432?schema=CARMEN_SYSTEM
      - DATABASE_URL_TENANT=postgresql://postgres:postgres@postgres:5432?schema=TENANT_DUMMY
      # - FRONTEND_URL=http://localhost:3500
      # - JWT_SECRET=4bDFs8qwAHRw9AMURufYt3UblS5FT4wCJV18ASte
      # - JWT_EXPIRES_IN=1d
      # - JWT_REFRESH_EXPIRES_IN=7d
      # - DATABASE_URL_SYSTEM=postgresql://postgres:postgres@www.semapru.com:5432?schema=CARMEN_SYSTEM
      # - DATABASE_URL_TENANT=postgresql://postgres:postgres@www.semapru.com:5432?schema=TENANT_DUMMY
      # - RESEND_TOKEN=re_2sry5ThE_L1XbBnv7waauFQkgjqMS6s1W
      # - EMAIL_FROM=no-reply@mail.semapru.com
      # - EMAIL_FORGOT_PASSWORD_EXPIRES_IN=1h
      # - EMAIL_REGISTER_CONFIRM_EXPIRES_IN=1h
      - NODE_ENV=production
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    # restart: always
    command: [sh, -c, 'npm run run:dev']
    # volumes:
      # - .:/app:delegated
      # - app/node_modules

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
  redis_data: